{"ast":null,"code":"var _jsxFileName = \"/Users/leonslaptop/Desktop/GSoC/Hanliang-Xu.github.io/frontend/src/pages/JSONUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Typography } from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n//const API_BASE_URL = 'https://asl-parameters-generator-a94b4af439d2.herokuapp.com/';\n//const API_BASE_URL = 'http://127.0.0.1:8000';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'https://rock-sublime-428805-r3.uc.r.appspot.com';\nfunction JSONUpload() {\n  _s();\n  const [majorErrorReport, setMajorErrorReport] = useState(null);\n  const [majorErrorReportConcise, setMajorErrorReportConcise] = useState(null);\n  const [majorErrorReportConciseText, setMajorErrorReportConciseText] = useState(null);\n  const [errorReport, setErrorReport] = useState(null);\n  const [errorReportConcise, setErrorReportConcise] = useState(null);\n  const [errorReportConciseText, setErrorReportConciseText] = useState(null);\n  const [warningReport, setWarningReport] = useState(null);\n  const [warningReportConcise, setWarningReportConcise] = useState(null);\n  const [warningReportConciseText, setWarningReportConciseText] = useState(null);\n  const [report, setReport] = useState(null);\n  const [extendedReport, setExtendedReport] = useState(null);\n  const [uploadError, setUploadError] = useState(null);\n  const [inconsistencies, setInconsistencies] = useState(null);\n  const [majorInconsistencies, setMajorInconsistencies] = useState(null);\n  const [warningInconsistencies, setWarningInconsistencies] = useState(null);\n  const [m0ConciseError, setM0ConciseError] = useState(null);\n  const [m0ConciseWarning, setM0ConciseWarning] = useState(null);\n  const [aslParameters, setAslParameters] = useState(null);\n  const [m0Parameters, setM0Parameters] = useState(null);\n  const [extendedParameters, setExtendedParameters] = useState(null);\n  const [showMajorConcise, setShowMajorConcise] = useState(true);\n  const [showErrorConcise, setShowErrorConcise] = useState(true);\n  const [showWarningConcise, setShowWarningConcise] = useState(true);\n  const [copySuccess, setCopySuccess] = useState('');\n  const handleDirectoryUpload = async event => {\n    const files = Array.from(event.target.files);\n\n    // Function to find relevant JSON and TSV files\n    const findRelevantFiles = items => {\n      const relevantFiles = [];\n\n      // Helper function to find file by name in the given folder\n      const findFileInFolder = (folderItems, fileName) => {\n        return folderItems.find(item => item.name.endsWith(fileName));\n      };\n      for (const item of items) {\n        const relativePath = item.webkitRelativePath || item.relativePath;\n        const pathParts = relativePath.split('/');\n        const parentFolder = pathParts[pathParts.length - 2];\n        if (parentFolder === 'perf' && item.name.endsWith('asl.json')) {\n          relevantFiles.push(item);\n          // Extract the base name before '_asl.json'\n          const baseName = item.name.replace('_asl.json', '');\n\n          // Find related files in the same folder\n          const folderItems = items.filter(i => i.webkitRelativePath.startsWith(relativePath.replace(/[^/]+$/, '')));\n\n          // Check if the base name matches the '_run-*' pattern\n          const runPatternMatch = baseName.match(/_run-\\d+$/);\n          if (runPatternMatch) {\n            const m0scanFile = findFileInFolder(folderItems, `${baseName}_m0scan.json`);\n            const aslcontextFile = findFileInFolder(folderItems, `${baseName}_aslcontext.tsv`);\n            if (m0scanFile) {\n              relevantFiles.push(m0scanFile); // Push _run-*_m0scan.json if it exists\n            }\n            if (aslcontextFile) {\n              relevantFiles.push(aslcontextFile); // Push _run-*_aslcontext.tsv if it exists\n            }\n          } else {\n            const m0scanFile = findFileInFolder(folderItems, 'm0scan.json');\n            const aslcontextFile = findFileInFolder(folderItems, 'aslcontext.tsv');\n            if (m0scanFile) {\n              relevantFiles.push(m0scanFile); // Push m0scan.json if it exists\n            }\n            if (aslcontextFile) {\n              relevantFiles.push(aslcontextFile); // Push aslcontext.tsv if it exists\n            }\n          }\n        }\n      }\n      return relevantFiles;\n    };\n\n    // Function to find the .nii or .nii.gz file in the perf folder\n    const findNiiFile = items => {\n      for (const item of items) {\n        const relativePath = item.webkitRelativePath || item.relativePath;\n        const pathParts = relativePath.split('/');\n        const parentFolder = pathParts[pathParts.length - 2];\n        if (parentFolder === 'perf' && (item.name.endsWith('asl.nii.gz') || item.name.endsWith('asl.nii'))) {\n          return item; // Return the first found .nii.gz or .nii file\n        }\n      }\n      return null;\n    };\n\n    // Main logic\n    const niiFile = findNiiFile(files);\n    const relevantFiles = findRelevantFiles(files);\n    const formData = new FormData();\n    formData.append('nii-file', niiFile);\n\n    // Append all relevant files to formData\n    files.forEach(file => {\n      if (file.name.endsWith('.dcm')) {\n        formData.append('dcm-files', file);\n      }\n    });\n    relevantFiles.forEach(file => {\n      formData.append('files', file);\n      formData.append('filenames', file.name);\n    });\n    try {\n      const response = await fetch(`${API_BASE_URL}/upload`, {\n        method: 'POST',\n        body: formData\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${response.status} - ${errorText}`);\n      }\n      const result = await response.json();\n      setMajorErrorReport(Object.keys(result.major_errors).length ? result.major_errors : null);\n      setMajorErrorReportConcise(Object.keys(result.major_errors_concise).length ? result.major_errors_concise : null);\n      setMajorErrorReportConciseText(result.major_errors_concise_text || null);\n      setErrorReport(Object.keys(result.errors).length ? result.errors : null);\n      setErrorReportConcise(Object.keys(result.errors_concise).length ? result.errors_concise : null);\n      setErrorReportConciseText(result.errors_concise_text || null);\n      setWarningReport(Object.keys(result.warnings).length ? result.warnings : null);\n      setWarningReportConcise(Object.keys(result.warnings_concise).length ? result.warnings_concise : null);\n      setWarningReportConciseText(result.warnings_concise_text || null);\n      setReport(result.basic_report || null);\n      setExtendedReport(result.extended_report || null);\n      setInconsistencies(result.inconsistencies || null);\n      setMajorInconsistencies(result.major_inconsistencies || null);\n      setWarningInconsistencies(result.warning_inconsistencies || null);\n      setM0ConciseError(result.m0_concise_error || null);\n      setM0ConciseWarning(result.m0_concise_warning || null);\n      setAslParameters(result.asl_parameters || null);\n      setM0Parameters(result.m0_parameters || null);\n      setExtendedParameters(result.extended_parameters || null);\n      setUploadError(null);\n    } catch (error) {\n      console.error('Error:', error);\n      setUploadError(error.message);\n    }\n  };\n  const handleDownloadReport = type => {\n    window.location.href = `${API_BASE_URL}/download?type=${type}`;\n  };\n  const renderCombinedParameterTable = (aslParameters = [], m0Parameters = [], extendedParameters = []) => {\n    if (!extendedReport) {\n      return null; // Don't render the table if conditions aren't met\n    }\n    const combinedParameters = [...(Array.isArray(aslParameters) ? aslParameters : []), ...(Array.isArray(m0Parameters) ? m0Parameters : []), ...(Array.isArray(extendedParameters) ? extendedParameters : [])];\n    return /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      sx: {\n        mt: 4,\n        width: '95%',\n        marginLeft: '18px',\n        // Left margin\n        marginRight: '18px' // Right margin\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          mt: 2,\n          mb: 1,\n          ml: 3\n        },\n        children: \"Combined Parameters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        \"aria-label\": \"combined parameter table\",\n        children: /*#__PURE__*/_jsxDEV(TableBody, {\n          children: combinedParameters.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              sx: {\n                borderBottom: '1px solid rgba(224, 224, 224, 1)',\n                padding: '8px 16px',\n                // Padding to add space between text and cell border\n                whiteSpace: 'nowrap',\n                // Prevents text from wrapping\n                verticalAlign: 'top',\n                // Aligns text to the top\n                paddingLeft: '48px'\n              },\n              children: row[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              sx: {\n                borderBottom: '1px solid rgba(224, 224, 224, 1)',\n                padding: '8px 16px',\n                // Padding to add space between text and cell border\n                width: '100%' // Ensures the column stretches across the remaining width\n              },\n              children: row[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this);\n  };\n  const renderReportSection = (title, fullReport, conciseReport, conciseText, showConcise, setShowConcise, type, m0Concise = null) => /*#__PURE__*/_jsxDEV(Box, {\n    mt: 2,\n    sx: {\n      border: `1px solid ${type === 'major_errors' ? 'darkred' : type === 'errors' ? 'red' : 'orange'}`,\n      padding: '10px',\n      borderRadius: '8px',\n      backgroundColor: type === 'major_errors' ? '#ffe6e6' : type === 'errors' ? '#ffe6e6' : '#fff4e6'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      sx: {\n        color: type === 'major_errors' ? 'darkred' : type === 'errors' ? 'red' : 'orange'\n      },\n      children: [title, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }, this), showConcise && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word'\n        },\n        children: type === 'major_errors' ? majorInconsistencies : type === 'errors' ? inconsistencies : type === 'warnings' ? warningInconsistencies : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n      style: {\n        whiteSpace: 'pre-wrap',\n        wordWrap: 'break-word'\n      },\n      children: showConcise ? conciseText || conciseReport || m0Concise ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [conciseText ? conciseText : conciseReport ? JSON.stringify(conciseReport, null, 2) : \"\", conciseText || conciseReport ? m0Concise && `\\n${m0Concise}` : m0Concise]\n      }, void 0, true) : \"\" : fullReport ? JSON.stringify(fullReport, null, 2) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"error\",\n      onClick: () => handleDownloadReport(type),\n      children: [\"Download \", type.replace('_', ' '), \" Report\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      color: \"secondary\",\n      onClick: () => setShowConcise(!showConcise),\n      children: showConcise ? \"Show Full Report\" : \"Show Concise Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 249,\n    columnNumber: 9\n  }, this);\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(report).then(() => {\n      setCopySuccess('Report copied to clipboard!');\n      setTimeout(() => setCopySuccess(''), 2000); // Clear the success message after 2 seconds\n    }).catch(err => {\n      setCopySuccess('Failed to copy!');\n      console.error('Failed to copy: ', err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    my: 4,\n    sx: {\n      width: '80%',\n      margin: '0 auto',\n      padding: '20px',\n      border: '1px solid #ccc',\n      borderRadius: '8px',\n      backgroundColor: '#f9f9f9',\n      marginTop: '40px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      gutterBottom: true,\n      children: \"OSIPI ASL Reporting Tool\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      p: 2,\n      sx: {\n        border: '1px solid #ccc',\n        borderRadius: '8px',\n        backgroundColor: '#f1f1f1'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: \"User Manual\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 2,\n        children: \"This application allows you to generate an ASL parameter report to be copied into the Methods section of paper. The program will validate the ASL datasets by checking for inconsistencies, invalid values, and providing warnings for slight variations. Please ensure that your dataset is organized according to the BIDS standard before uploading. Here are some sample folders for you to download and test: https://drive.google.com/drive/folders/1NuG_ofLbaLYswNlBN2aRDkxLOucYFQfg?usp=sharing\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Steps:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 1,\n        children: \"1. Click the \\\"Choose Folder\\\" button and select the BIDS folder containing your ASL data.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 1,\n        children: \"2. The application will process your files (including xxx_asl.json and xxx_asl.nii or xxx_asl.nii.gz) and display the results below.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 1,\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Note:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 21\n        }, this), \" The following specific checks and summaries will be reported:\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        mt: 1,\n        children: [\"- \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Inconsistency Check:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 23\n        }, this), \" Discrepancies between values across different sessions, such as variations in PLD, labeling duration, echo time, and voxel sizes.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        mt: 1,\n        children: [\"- \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Invalid Values Check:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 23\n        }, this), \" Identifying values that do not meet predefined criteria, such as incorrect numeric ranges, boolean values, and string values.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        mt: 1,\n        children: [\"- \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Slight Variation Warning:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 359,\n          columnNumber: 23\n        }, this), \" Highlighting values that might not constitute a major error but are worth noting.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        mt: 1,\n        children: [\"- \", /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Generated Report:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 363,\n          columnNumber: 23\n        }, this), \" The software generates an ASL parameter report to be included in the Methods section of paper. A suggested statement for inclusion in the cover letter explaining that the relevant part of the Methods section has been constructed according to standard format is also provided (TODO).\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 3,\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Acknowledgments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        mt: 1,\n        children: \"This project has been developed under the mentorship and supervision of Jan Petr and David Thomas. Their guidance and support have been invaluable throughout the development process.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      webkitdirectory: \"true\",\n      onChange: handleDirectoryUpload,\n      style: {\n        margin: '20px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 13\n    }, this), uploadError && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      sx: {\n        color: 'red'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: \"Upload Error:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: uploadError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 17\n    }, this), majorErrorReport && renderReportSection(\"MAJOR ERRORS (you cannot report a sequence protocol without these)\", majorErrorReport, majorErrorReportConcise, majorErrorReportConciseText, showMajorConcise, setShowMajorConcise, 'major_errors'), errorReport && renderReportSection(\"ERRORS (these are major shortcomings, you need to provide those)\", errorReport, errorReportConcise, errorReportConciseText, showErrorConcise, setShowErrorConcise, 'errors', m0ConciseError), warningReport && renderReportSection(\"WARNINGS\", warningReport, warningReportConcise, warningReportConciseText, showWarningConcise, setShowWarningConcise, 'warnings', m0ConciseWarning), report && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      sx: {\n        border: '1px solid blue',\n        padding: '10px',\n        borderRadius: '8px',\n        backgroundColor: '#e6f7ff',\n        maxHeight: '400px',\n        overflowY: 'auto',\n        position: 'relative' // Add relative positioning for positioning the copy feedback\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'blue'\n        },\n        children: \"Generated Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word'\n        },\n        children: report\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => handleDownloadReport('report'),\n        children: \"Download Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"secondary\",\n        onClick: copyToClipboard,\n        sx: {\n          ml: 2\n        },\n        children: \"Copy Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 21\n      }, this), copySuccess && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"subtitle1\",\n        sx: {\n          color: 'green',\n          position: 'absolute',\n          // Position the feedback message absolutely\n          top: 0,\n          right: 0,\n          mt: 1,\n          mr: 1,\n          backgroundColor: 'rgba(255, 255, 255, 0.8)',\n          padding: '5px',\n          borderRadius: '4px'\n        },\n        children: copySuccess\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 17\n    }, this), extendedReport && /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      sx: {\n        border: '1px solid green',\n        padding: '10px',\n        borderRadius: '8px',\n        backgroundColor: '#e6ffe6',\n        maxHeight: '400px',\n        overflowY: 'auto',\n        position: 'relative' // Add relative positioning for positioning the copy feedback\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        sx: {\n          color: 'green'\n        },\n        children: \"Extended Report:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        style: {\n          whiteSpace: 'pre-wrap',\n          wordWrap: 'break-word'\n        },\n        children: extendedReport\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: () => handleDownloadReport('extended_report'),\n        children: \"Download Extended Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 17\n    }, this), renderCombinedParameterTable(aslParameters, m0Parameters, extendedParameters)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 304,\n    columnNumber: 9\n  }, this);\n}\n_s(JSONUpload, \"dqtBkTxn40LtMTqaVX8P9E4wRHk=\");\n_c = JSONUpload;\nexport default JSONUpload;\nvar _c;\n$RefreshReg$(_c, \"JSONUpload\");","map":{"version":3,"names":["React","useState","Box","Button","Typography","Table","TableBody","TableCell","TableContainer","TableRow","Paper","jsxDEV","_jsxDEV","Fragment","_Fragment","API_BASE_URL","JSONUpload","_s","majorErrorReport","setMajorErrorReport","majorErrorReportConcise","setMajorErrorReportConcise","majorErrorReportConciseText","setMajorErrorReportConciseText","errorReport","setErrorReport","errorReportConcise","setErrorReportConcise","errorReportConciseText","setErrorReportConciseText","warningReport","setWarningReport","warningReportConcise","setWarningReportConcise","warningReportConciseText","setWarningReportConciseText","report","setReport","extendedReport","setExtendedReport","uploadError","setUploadError","inconsistencies","setInconsistencies","majorInconsistencies","setMajorInconsistencies","warningInconsistencies","setWarningInconsistencies","m0ConciseError","setM0ConciseError","m0ConciseWarning","setM0ConciseWarning","aslParameters","setAslParameters","m0Parameters","setM0Parameters","extendedParameters","setExtendedParameters","showMajorConcise","setShowMajorConcise","showErrorConcise","setShowErrorConcise","showWarningConcise","setShowWarningConcise","copySuccess","setCopySuccess","handleDirectoryUpload","event","files","Array","from","target","findRelevantFiles","items","relevantFiles","findFileInFolder","folderItems","fileName","find","item","name","endsWith","relativePath","webkitRelativePath","pathParts","split","parentFolder","length","push","baseName","replace","filter","i","startsWith","runPatternMatch","match","m0scanFile","aslcontextFile","findNiiFile","niiFile","formData","FormData","append","forEach","file","response","fetch","method","body","ok","errorText","text","Error","status","result","json","Object","keys","major_errors","major_errors_concise","major_errors_concise_text","errors","errors_concise","errors_concise_text","warnings","warnings_concise","warnings_concise_text","basic_report","extended_report","major_inconsistencies","warning_inconsistencies","m0_concise_error","m0_concise_warning","asl_parameters","m0_parameters","extended_parameters","error","console","message","handleDownloadReport","type","window","location","href","renderCombinedParameterTable","combinedParameters","isArray","component","sx","mt","width","marginLeft","marginRight","children","variant","mb","ml","_jsxFileName","lineNumber","columnNumber","map","row","index","scope","borderBottom","padding","whiteSpace","verticalAlign","paddingLeft","align","renderReportSection","title","fullReport","conciseReport","conciseText","showConcise","setShowConcise","m0Concise","border","borderRadius","backgroundColor","color","style","wordWrap","JSON","stringify","onClick","copyToClipboard","navigator","clipboard","writeText","then","setTimeout","catch","err","my","margin","marginTop","gutterBottom","p","webkitdirectory","onChange","maxHeight","overflowY","position","top","right","mr","_c","$RefreshReg$"],"sources":["/Users/leonslaptop/Desktop/GSoC/Hanliang-Xu.github.io/frontend/src/pages/JSONUpload.js"],"sourcesContent":["import React, {useState} from 'react';\nimport {Box, Button, Typography} from '@mui/material';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\n\n//const API_BASE_URL = 'https://asl-parameters-generator-a94b4af439d2.herokuapp.com/';\n//const API_BASE_URL = 'http://127.0.0.1:8000';\n\nconst API_BASE_URL = 'https://rock-sublime-428805-r3.uc.r.appspot.com';\n\nfunction JSONUpload() {\n    const [majorErrorReport, setMajorErrorReport] = useState(null);\n    const [majorErrorReportConcise, setMajorErrorReportConcise] = useState(null);\n    const [majorErrorReportConciseText, setMajorErrorReportConciseText] = useState(null);\n    const [errorReport, setErrorReport] = useState(null);\n    const [errorReportConcise, setErrorReportConcise] = useState(null);\n    const [errorReportConciseText, setErrorReportConciseText] = useState(null);\n    const [warningReport, setWarningReport] = useState(null);\n    const [warningReportConcise, setWarningReportConcise] = useState(null);\n    const [warningReportConciseText, setWarningReportConciseText] = useState(null);\n    const [report, setReport] = useState(null);\n    const [extendedReport, setExtendedReport] = useState(null);\n\n    const [uploadError, setUploadError] = useState(null);\n    const [inconsistencies, setInconsistencies] = useState(null);\n    const [majorInconsistencies, setMajorInconsistencies] = useState(null);\n    const [warningInconsistencies, setWarningInconsistencies] = useState(null);\n    const [m0ConciseError, setM0ConciseError] = useState(null);\n    const [m0ConciseWarning, setM0ConciseWarning] = useState(null);\n\n    const [aslParameters, setAslParameters] = useState(null);\n    const [m0Parameters, setM0Parameters] = useState(null);\n    const [extendedParameters, setExtendedParameters] = useState(null);\n\n    const [showMajorConcise, setShowMajorConcise] = useState(true);\n    const [showErrorConcise, setShowErrorConcise] = useState(true);\n    const [showWarningConcise, setShowWarningConcise] = useState(true);\n    const [copySuccess, setCopySuccess] = useState('');\n\n\n    const handleDirectoryUpload = async (event) => {\n        const files = Array.from(event.target.files);\n\n\n        // Function to find relevant JSON and TSV files\n        const findRelevantFiles = (items) => {\n            const relevantFiles = [];\n\n            // Helper function to find file by name in the given folder\n            const findFileInFolder = (folderItems, fileName) => {\n                return folderItems.find(item => item.name.endsWith(fileName));\n            };\n\n            for (const item of items) {\n                const relativePath = item.webkitRelativePath || item.relativePath;\n                const pathParts = relativePath.split('/');\n                const parentFolder = pathParts[pathParts.length - 2];\n\n                if (parentFolder === 'perf' && item.name.endsWith('asl.json')) {\n                    relevantFiles.push(item);\n                    // Extract the base name before '_asl.json'\n                    const baseName = item.name.replace('_asl.json', '');\n\n                    // Find related files in the same folder\n                    const folderItems = items.filter(i => i.webkitRelativePath.startsWith(relativePath.replace(/[^/]+$/, '')));\n\n                    // Check if the base name matches the '_run-*' pattern\n                    const runPatternMatch = baseName.match(/_run-\\d+$/);\n\n                    if (runPatternMatch) {\n                        const m0scanFile = findFileInFolder(folderItems, `${baseName}_m0scan.json`);\n                        const aslcontextFile = findFileInFolder(folderItems, `${baseName}_aslcontext.tsv`);\n\n                        if (m0scanFile) {\n                            relevantFiles.push(m0scanFile); // Push _run-*_m0scan.json if it exists\n                        }\n                        if (aslcontextFile) {\n                            relevantFiles.push(aslcontextFile); // Push _run-*_aslcontext.tsv if it exists\n                        }\n\n                    } else {\n                        const m0scanFile = findFileInFolder(folderItems, 'm0scan.json');\n                        const aslcontextFile = findFileInFolder(folderItems, 'aslcontext.tsv');\n\n                        if (m0scanFile) {\n                            relevantFiles.push(m0scanFile); // Push m0scan.json if it exists\n                        }\n                        if (aslcontextFile) {\n                            relevantFiles.push(aslcontextFile); // Push aslcontext.tsv if it exists\n                        }\n                    }\n                }\n            }\n\n            return relevantFiles;\n        };\n\n        // Function to find the .nii or .nii.gz file in the perf folder\n        const findNiiFile = (items) => {\n            for (const item of items) {\n                const relativePath = item.webkitRelativePath || item.relativePath;\n                const pathParts = relativePath.split('/');\n                const parentFolder = pathParts[pathParts.length - 2];\n\n                if (parentFolder === 'perf' &&\n                    (item.name.endsWith('asl.nii.gz') || item.name.endsWith('asl.nii'))) {\n                    return item; // Return the first found .nii.gz or .nii file\n                }\n            }\n            return null;\n        };\n\n        // Main logic\n        const niiFile = findNiiFile(files);\n\n        const relevantFiles = findRelevantFiles(files);\n        const formData = new FormData();\n        formData.append('nii-file', niiFile);\n\n        // Append all relevant files to formData\n        files.forEach(file => {\n            if (file.name.endsWith('.dcm')) {\n                formData.append('dcm-files', file);\n            }\n        });\n\n        relevantFiles.forEach(file => {\n            formData.append('files', file);\n            formData.append('filenames', file.name);\n        })\n\n\n        try {\n            const response = await fetch(`${API_BASE_URL}/upload`, {\n                method: 'POST',\n                body: formData\n            });\n\n            if (!response.ok) {\n                const errorText = await response.text();\n                throw new Error(`Server error: ${response.status} - ${errorText}`);\n            }\n\n            const result = await response.json();\n            setMajorErrorReport(Object.keys(result.major_errors).length ? result.major_errors : null);\n            setMajorErrorReportConcise(Object.keys(result.major_errors_concise).length ? result.major_errors_concise : null);\n            setMajorErrorReportConciseText(result.major_errors_concise_text || null);\n            setErrorReport(Object.keys(result.errors).length ? result.errors : null);\n            setErrorReportConcise(Object.keys(result.errors_concise).length ? result.errors_concise : null);\n            setErrorReportConciseText(result.errors_concise_text || null);\n            setWarningReport(Object.keys(result.warnings).length ? result.warnings : null);\n            setWarningReportConcise(Object.keys(result.warnings_concise).length ? result.warnings_concise : null);\n            setWarningReportConciseText(result.warnings_concise_text || null);\n            setReport(result.basic_report || null);\n            setExtendedReport(result.extended_report || null);\n            setInconsistencies(result.inconsistencies || null);\n            setMajorInconsistencies(result.major_inconsistencies || null);\n            setWarningInconsistencies(result.warning_inconsistencies || null);\n            setM0ConciseError(result.m0_concise_error || null);\n            setM0ConciseWarning(result.m0_concise_warning || null);\n            setAslParameters(result.asl_parameters || null)\n            setM0Parameters(result.m0_parameters || null)\n            setExtendedParameters(result.extended_parameters || null)\n\n            setUploadError(null);\n        } catch (error) {\n            console.error('Error:', error);\n            setUploadError(error.message);\n        }\n    };\n\n    const handleDownloadReport = (type) => {\n        window.location.href = `${API_BASE_URL}/download?type=${type}`;\n    };\n\n\n    const renderCombinedParameterTable = (aslParameters = [], m0Parameters = [], extendedParameters = []) => {\n        if (!extendedReport) {\n            return null; // Don't render the table if conditions aren't met\n        }\n\n        const combinedParameters = [\n            ...(Array.isArray(aslParameters) ? aslParameters : []),\n            ...(Array.isArray(m0Parameters) ? m0Parameters : []),\n            ...(Array.isArray(extendedParameters) ? extendedParameters : [])\n        ];\n\n        return (\n            <TableContainer\n                component={Paper}\n                sx={{\n                    mt: 4,\n                    width: '95%',\n                    marginLeft: '18px',  // Left margin\n                    marginRight: '18px'  // Right margin\n                }}\n            >\n                <Typography variant=\"h6\" sx={{ mt: 2, mb: 1, ml: 3 }}>Combined Parameters</Typography>\n                <Table aria-label=\"combined parameter table\">\n                    <TableBody>\n                        {combinedParameters.map((row, index) => (\n                            <TableRow key={index}>\n                                <TableCell\n                                    component=\"th\"\n                                    scope=\"row\"\n                                    sx={{\n                                        borderBottom: '1px solid rgba(224, 224, 224, 1)',\n                                        padding: '8px 16px',  // Padding to add space between text and cell border\n                                        whiteSpace: 'nowrap', // Prevents text from wrapping\n                                        verticalAlign: 'top',  // Aligns text to the top\n                                        paddingLeft: '48px'\n                                    }}\n                                >\n                                    {row[0]}\n                                </TableCell>\n                                <TableCell\n                                    align=\"left\"\n                                    sx={{\n                                        borderBottom: '1px solid rgba(224, 224, 224, 1)',\n                                        padding: '8px 16px',  // Padding to add space between text and cell border\n                                        width: '100%' // Ensures the column stretches across the remaining width\n                                    }}\n                                >\n                                    {row[1]}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        );\n    };\n\n    const renderReportSection = (\n        title,\n        fullReport,\n        conciseReport,\n        conciseText,\n        showConcise,\n        setShowConcise,\n        type,\n        m0Concise = null\n    ) => (\n\n        <Box mt={2} sx={{\n            border: `1px solid ${type === 'major_errors' ? 'darkred' : type === 'errors' ? 'red' : 'orange'}`,\n            padding: '10px',\n            borderRadius: '8px',\n            backgroundColor: type === 'major_errors' ? '#ffe6e6' : type === 'errors' ? '#ffe6e6' : '#fff4e6'\n        }}>\n            <Typography variant=\"h6\"\n                        sx={{color: type === 'major_errors' ? 'darkred' : type === 'errors' ? 'red' : 'orange'}}>{title}:</Typography>\n            {showConcise && (\n                <Box mt={2}>\n                    <pre style={{whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                        {type === 'major_errors' ? majorInconsistencies :\n                            type === 'errors' ? inconsistencies :\n                                type === 'warnings' ? warningInconsistencies : ''}\n                    </pre>\n                </Box>\n            )}\n\n            <pre style={{whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>\n                {showConcise ? (\n                    conciseText || conciseReport || m0Concise ? (\n                        <>\n                            {conciseText ? conciseText : (conciseReport ? JSON.stringify(conciseReport, null, 2) : \"\")}\n                            {conciseText || conciseReport ? (m0Concise && `\\n${m0Concise}`) : m0Concise}\n                        </>\n                    ) : \"\"\n                ) : fullReport ? (\n                    JSON.stringify(fullReport, null, 2)\n                ) : \"\"}\n            </pre>\n            <Button variant=\"contained\" color=\"error\"\n                    onClick={() => handleDownloadReport(type)}>\n                Download {type.replace('_', ' ')} Report\n            </Button>\n            <Button variant=\"contained\" color=\"secondary\"\n                    onClick={() => setShowConcise(!showConcise)}>\n                {showConcise ? \"Show Full Report\" : \"Show Concise Report\"}\n            </Button>\n        </Box>\n    );\n\n\n    const copyToClipboard = () => {\n        navigator.clipboard.writeText(report)\n            .then(() => {\n                setCopySuccess('Report copied to clipboard!');\n                setTimeout(() => setCopySuccess(''), 2000);  // Clear the success message after 2 seconds\n            })\n            .catch(err => {\n                setCopySuccess('Failed to copy!');\n                console.error('Failed to copy: ', err);\n            });\n    };\n\n    return (\n        <Box\n            my={4}\n            sx={{\n                width: '80%',\n                margin: '0 auto',\n                padding: '20px',\n                border: '1px solid #ccc',\n                borderRadius: '8px',\n                backgroundColor: '#f9f9f9',\n                marginTop: '40px'\n            }}\n        >\n            <Typography variant=\"h4\" gutterBottom>\n                OSIPI ASL Reporting Tool\n            </Typography>\n\n            <Box mt={4} p={2}\n                 sx={{border: '1px solid #ccc', borderRadius: '8px', backgroundColor: '#f1f1f1'}}>\n                <Typography variant=\"h5\">User Manual</Typography>\n                <Typography variant=\"body1\" mt={2}>\n                    This application allows you to generate an ASL parameter report to be copied\n                    into the Methods section of paper. The program will validate the ASL datasets by\n                    checking for inconsistencies, invalid values, and providing warnings for slight\n                    variations. Please ensure that your dataset is organized according to the BIDS\n                    standard before uploading. Here are some sample folders for you to download and\n                    test:\n                    https://drive.google.com/drive/folders/1NuG_ofLbaLYswNlBN2aRDkxLOucYFQfg?usp=sharing\n                </Typography>\n                <Typography variant=\"body1\" mt={2}>\n                    <strong>Steps:</strong>\n                </Typography>\n                <Typography variant=\"body1\" mt={1}>\n                    1. Click the \"Choose Folder\" button and select the BIDS folder containing your\n                    ASL data.\n                </Typography>\n                <Typography variant=\"body1\" mt={1}>\n                    2. The application will process your files (including xxx_asl.json and\n                    xxx_asl.nii or\n                    xxx_asl.nii.gz) and display the results below.\n                </Typography>\n                <Typography variant=\"body1\" mt={1}>\n                    <strong>Note:</strong> The following specific checks and summaries will\n                    be reported:\n                </Typography>\n                <Typography variant=\"body2\" mt={1}>\n                    - <strong>Inconsistency Check:</strong> Discrepancies between values across\n                    different sessions, such as variations in PLD, labeling duration, echo time, and\n                    voxel sizes.\n                </Typography>\n                <Typography variant=\"body2\" mt={1}>\n                    - <strong>Invalid Values Check:</strong> Identifying values that do not meet\n                    predefined criteria, such as incorrect numeric ranges, boolean values, and\n                    string values.\n                </Typography>\n                <Typography variant=\"body2\" mt={1}>\n                    - <strong>Slight Variation Warning:</strong> Highlighting values that might not\n                    constitute a major error but are worth noting.\n                </Typography>\n                <Typography variant=\"body2\" mt={1}>\n                    - <strong>Generated Report:</strong> The software generates an ASL parameter\n                    report to be included in the Methods section of paper. A suggested statement for\n                    inclusion in the cover letter explaining that the relevant part of the Methods\n                    section has been constructed according to standard format is also provided\n                    (TODO).\n                </Typography>\n\n                <Typography variant=\"body1\" mt={3}>\n                    <strong>Acknowledgments</strong>\n                </Typography>\n                <Typography variant=\"body1\" mt={1}>\n                    This project has been developed under the mentorship and supervision of Jan Petr and David Thomas. Their guidance and support have been invaluable throughout the development process.\n                </Typography>\n            </Box>\n\n            <input\n                type=\"file\"\n                webkitdirectory=\"true\"\n                onChange={handleDirectoryUpload}\n                style={{margin: '20px 0'}}\n            />\n            {uploadError && (\n                <Box mt={2} sx={{color: 'red'}}>\n                    <Typography variant=\"h6\">Upload Error:</Typography>\n                    <pre>{uploadError}</pre>\n                </Box>\n            )}\n            {majorErrorReport && renderReportSection(\n                \"MAJOR ERRORS (you cannot report a sequence protocol without these)\",\n                majorErrorReport,\n                majorErrorReportConcise,\n                majorErrorReportConciseText,\n                showMajorConcise,\n                setShowMajorConcise,\n                'major_errors'\n            )}\n            {errorReport && renderReportSection(\n                \"ERRORS (these are major shortcomings, you need to provide those)\",\n                errorReport,\n                errorReportConcise,\n                errorReportConciseText,\n                showErrorConcise,\n                setShowErrorConcise,\n                'errors',\n                m0ConciseError,\n            )}\n            {warningReport && renderReportSection(\n                \"WARNINGS\",\n                warningReport,\n                warningReportConcise,\n                warningReportConciseText,\n                showWarningConcise,\n                setShowWarningConcise,\n                'warnings',\n                m0ConciseWarning\n            )}\n            {report && (\n                <Box mt={2} sx={{\n                    border: '1px solid blue',\n                    padding: '10px',\n                    borderRadius: '8px',\n                    backgroundColor: '#e6f7ff',\n                    maxHeight: '400px',\n                    overflowY: 'auto',\n                    position: 'relative'  // Add relative positioning for positioning the copy feedback\n                }}>\n                    <Typography variant=\"h6\" sx={{color: 'blue'}}>Generated Report:</Typography>\n                    <pre style={{whiteSpace: 'pre-wrap', wordWrap: 'break-word'}}>{report}</pre>\n                    <Button variant=\"contained\" color=\"primary\"\n                            onClick={() => handleDownloadReport('report')}>\n                        Download Report\n                    </Button>\n                    <Button variant=\"contained\" color=\"secondary\" onClick={copyToClipboard}\n                            sx={{ml: 2}}>\n                        Copy Report\n                    </Button>\n                    {copySuccess && (\n                        <Typography variant=\"subtitle1\" sx={{\n                            color: 'green',\n                            position: 'absolute',  // Position the feedback message absolutely\n                            top: 0,\n                            right: 0,\n                            mt: 1,\n                            mr: 1,\n                            backgroundColor: 'rgba(255, 255, 255, 0.8)',\n                            padding: '5px',\n                            borderRadius: '4px'\n                        }}>\n                            {copySuccess}\n                        </Typography>\n                    )}\n                </Box>\n            )}\n            {extendedReport && (\n                <Box mt={2} sx={{\n                    border: '1px solid green',\n                    padding: '10px',\n                    borderRadius: '8px',\n                    backgroundColor: '#e6ffe6',\n                    maxHeight: '400px',\n                    overflowY: 'auto',\n                    position: 'relative'  // Add relative positioning for positioning the copy feedback\n                }}>\n                    <Typography variant=\"h6\" sx={{color: 'green'}}>Extended Report:</Typography>\n                    <pre style={{\n                        whiteSpace: 'pre-wrap',\n                        wordWrap: 'break-word'\n                    }}>{extendedReport}</pre>\n                    <Button variant=\"contained\" color=\"primary\"\n                            onClick={() => handleDownloadReport('extended_report')}>\n                        Download Extended Report\n                    </Button>\n                </Box>\n            )}\n            {renderCombinedParameterTable(aslParameters, m0Parameters, extendedParameters)}\n        </Box>\n    );\n}\n\nexport default JSONUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}